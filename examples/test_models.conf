[nvprodlda_tfidf_20news]
num_topics = 50
type_model = "ProdLDA"
modelkwargs = dict(n_hidden=[100], non_linearity="tf.nn.tanh", drop_prob=0.2, alpha=0.001, learning_rate=0.001)
train_kwargs = dict(batch_size=64, epochs=16)
wfolder = "./data/20newsgroup"
corpus_file = "tfidf_train.npy"
test_file = "tfidf_test.npy"
dictionary_file = "dictionary"
meta_file = "train_wheader.label"
test_meta_file = "test_wheader.label"

[nvprodlda_tfidf_20news_w_meta]
num_topics = 50
type_model = "ProdLDAwMeta"
modelkwargs = dict(n_hidden=[100], non_linearity="tf.nn.tanh", x_num_classes=20, metanet_n_hidden=[50], metanet_non_linearity="tf.nn.tanh", drop_prob=0.2, alpha=0.001, learning_rate=0.001)
train_kwargs = dict(batch_size=64, epochs=16)#, validation_split=0.1
wfolder = "./data/20newsgroup"
corpus_file = "tfidf_train.npy"
test_file = "tfidf_test.npy"
dictionary_file = "dictionary"
meta_file = "train_wheader.label"
test_meta_file = "test_wheader.label"
test_unknown_value = 0
input_x_file = "train_zerobased.label"

[nvprodlda_tfidf_20news_author]
num_topics = 50
type_model = "AuthorTopicModel"
modelkwargs = dict(n_hidden=[100], non_linearity="tf.nn.tanh", x_num_classes=20, priornet_n_hidden=[50], priornet_non_linearity="tf.nn.tanh", drop_prob=0.2, alpha=0.95, author_alpha=0.05, learning_rate=0.001)
train_kwargs = dict(batch_size=64, epochs=16)#, validation_split=0.1
wfolder = "./data/20newsgroup"
corpus_file = "tfidf_train.npy"
test_file = "tfidf_test.npy"
dictionary_file = "dictionary"
meta_file = "train_wheader.label"
test_meta_file = "test_wheader.label"
input_x_file = "train_zerobased.label"

[nvprodlda_tfidf_nips]
num_topics = 50
type_model = "ProdLDA"
modelkwargs = dict(n_hidden=[100], non_linearity="tf.nn.tanh", drop_prob=0.2, alpha=0.001, learning_rate=0.001)
train_kwargs = dict(batch_size=64, epochs=16)
wfolder = "./data/nips"
corpus_file = "corpus_tfidf_train.npy"
test_file = "corpus_tfidf_test.npy"
dictionary_file = "dictionary"
meta_file = "corpus_train.meta"
test_meta_file = "corpus_test.meta"

[nvprodlda_tfidf_nips_author]
num_topics = 50
type_model = "AuthorTopicModel"
modelkwargs = dict(n_hidden=[100], non_linearity="tf.nn.tanh", x_num_classes=828, priornet_n_hidden=[50], priornet_non_linearity="tf.nn.tanh", drop_prob=0.2, alpha=0.001, author_alpha=0.001, learning_rate=0.001)
train_kwargs = dict(batch_size=64, epochs=24)#, validation_split=0.1
wfolder = "./data/nips"
corpus_file = "corpus_tfidf_train.npy"
test_file = "corpus_tfidf_test.npy"
dictionary_file = "dictionary"
meta_file = "corpus_train.meta"
test_meta_file = "corpus_test.meta"
input_x_file = "corpus_train_authors_onehot.csv"
input_x_categorical = False
